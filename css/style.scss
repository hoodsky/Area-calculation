//TO%
@function prc($pxOne, $pxTwo) {
    $result: ($pxOne/$pxTwo)*100%;
    @return $result;
}

//REM
@function rem($px) {
    $result: ($px/16)+rem;
    @return $result;
}

//EM

@function em($px) {
    $result: ($px/16)+rem;
    @return $result;
}

// адаптивное свойство
$maxWidth: 1920 / 16; //максимальный размер экрана (px)
$maxWidthContainer: 1200 / 16; //максимальный размер контейнера (px)

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
    $addSize: ($startSize / 16)- ($minSize / 16);

    @if $type==1 {
        //Только если меньше контейнера
        #{$property}: ($startSize / 16) + rem;

        @media (max-width: #{$maxWidthContainer + rem}) {
            #{$property}: calc(#{($minSize / 16) + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidthContainer - 20}));
        }
    }

    @else if $type==2 {
        //Только если больше контейнера
        #{$property}: ($startSize / 16) + rem;

        @media (min-width: #{$maxWidthContainer + rem}) {
            #{$property}: calc(#{($minSize / 16) + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidth - 20}));
        }
    }

    @else {
        //Всегда
        #{$property}: calc(#{($minSize /16 ) + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidth - 20}));
    }
}

//@include adaptiv-value("значение", начальный размер, конечный размер, тип(1-меньше контейнера, 2-больше, 0-всегда))

@import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@200;300;400;500;600&display=swap');


html {
    font-family: 'Source Code Pro', monospace;
}

input[type="number"] {
    -moz-appearance: textfield;
    -webkit-appearance: textfield;
    appearance: textfield;
}

h1 {
    font-size: rem(50);
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    display: none;
}

input[type="number"] {
    border: none;
    margin: rem(10) 0;
    font-family: 'Source Code Pro', monospace;
    outline: none;
    padding: 0px rem(36);
    border-radius: rem(32);
    height: rem(32);
}


input:focus {
    border: none;
}

.input-block {
    position: relative;

    span {
        position: absolute;
        right: rem(36);
        bottom: rem(20);
        font-size: 0.8em;
        color: gray;
    }
}

.change-section {
    background-color: gray;
}

h3 {
    text-align: center;
}

input[type="radio"]:checked {
    background-color: rgb(24, 119, 103);
    border: 1px solid rgb(24, 119, 103);
}

input[type="radio"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    border-radius: 50%;
    width: rem(18);
    height: rem(18);

    border: 1px solid silver;
    transition: 0.2s all linear;
    // margin-right: 5px;
    cursor: pointer;
    // position: relative;
    // top: 4px;

}

.tile {
    background-color: silver;
    padding: rem(20) rem(10);
    display: flex;
    flex-direction: column;
    align-items: center;
    opacity: 0;
    transition: all 1s ease;

    &__dimensions {
        margin-bottom: rem(20);

    }
}

.number-minus,
.number-plus {
    height: rem(30);
    border: none;
    width: rem(30);
    cursor: pointer;
    border-radius: 50%;
    position: absolute;
    top: rem(11);
    background-color: rgb(24, 119, 103);
    color: white;
}

.number-minus {
    left: rem(1);
}

.number-plus {
    right: rem(1);
}

#one-tile-area {
    position: absolute;
    font-size: 0.8em;
    text-align: center;
    color: rgb(99, 99, 99);
}