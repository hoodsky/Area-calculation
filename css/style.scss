//TO%
@function prc($pxOne, $pxTwo) {
  $result: ($pxOne/$pxTwo) * 100%;
  @return $result;
}

//REM
@function rem($px) {
  $result: ($px/16) + rem;
  @return $result;
}

//EM

@function em($px) {
  $result: ($px/16) + rem;
  @return $result;
}

// адаптивное свойство
$maxWidth: 1920 / 16; //максимальный размер экрана (px)
$maxWidthContainer: 1200 / 16; //максимальный размер контейнера (px)

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
  $addSize: ($startSize / 16)- ($minSize / 16);

  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: ($startSize / 16) + rem;

    @media (max-width: #{$maxWidthContainer + rem}) {
      #{$property}: calc(
        #{($minSize / 16) + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidthContainer -
              20})
      );
    }
  } @else if $type==2 {
    //Только если больше контейнера
    #{$property}: ($startSize / 16) + rem;

    @media (min-width: #{$maxWidthContainer + rem}) {
      #{$property}: calc(
        #{($minSize / 16) + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidth -
              20})
      );
    }
  } @else {
    //Всегда
    #{$property}: calc(
      #{($minSize / 16) +
        rem} +
        #{$addSize} *
        ((100vw - 20rem) / #{$maxWidth - 20})
    );
  }
}

//@include adaptiv-value("значение", начальный размер, конечный размер, тип(1-меньше контейнера, 2-больше, 0-всегда))

@import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@200;300;400;500;600&display=swap');

$main-color: #61a2ae;
$back-color: #313131;
$font-color: #ffffff;

body {
  font-family: 'Source Code Pro', monospace;
  background-color: $back-color;
  color: $font-color;
  width: 100vw;
  animation: start 0.5s ease;
}

button,
button:active,
button:focus {
  outline: none;
}

input[type='number']::-webkit-outer-spin-button,
input[type='number']::-webkit-inner-spin-button {
  display: none;
}

input[type='number'] {
  -moz-appearance: textfield;
  -webkit-appearance: textfield;
  appearance: textfield;
  border: none;
  margin: rem(10) 0;
  font-family: 'Source Code Pro', monospace;
  outline: none;
  padding: 0px rem(12);
  // border-radius: rem(42);
  height: rem(42);
  // border: 1px solid $main-color;
}

input:focus {
  // border: 1px solid $main-color - 50%;
  background-color: $main-color + 150%;
}

.input-block {
  position: relative;

  span {
    position: absolute;
    right: rem(12);
    bottom: rem(24);
    font-size: 0.8em;
    color: $main-color - 50%;
  }
}

h2 {
  text-align: center;
}

input[type='radio']:checked {
  background-color: $main-color;
  border: 1px solid $main-color;
}

input[type='radio'] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-radius: 50%;
  width: rem(18);
  height: rem(18);
  border: 1px solid silver;
  transition: 0.2s all linear;
  cursor: pointer;
}

.title {
  transition: all 0.3s;
  z-index: 5;
  padding: 20px 20px 0 20px;

  h1 {
    font-size: rem(40);
    color: $main-color;
    transition: all 0.3s;
    text-align: center;
  }
}

.tile {
  padding: rem(20) rem(10);
  display: flex;
  transform: scale(0);
  flex-direction: column;
  align-items: center;
  opacity: 0;
  transition: all 1s ease;
  // margin-bottom: 50px;

  &.active {
    display: flex;
    opacity: 1;
    transform: scale(1);
    transition: all 1s ease;
  }

  &__dimensions {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
}

.padding {
  padding-bottom: rem(14);
}

.number {
  &-minus {
    border-radius: 50% 0 0 50%;
    left: rem(-36);
    &::before {
      content: '';
      background-color: #ffffff;
      width: 12px;
      height: 2px;
      position: absolute;
      left: 12px;
      top: calc(50% - 1px);
    }
  }
  &-plus {
    border-radius: 0 50% 50% 0;
    right: rem(-36);
    &::before {
      content: '';
      background-color: #ffffff;
      width: 12px;
      height: 2px;
      position: absolute;
      right: 12px;
      top: calc(50% - 1px);
    }
    &::after {
      content: '';
      background-color: #ffffff;
      width: 2px;
      height: 12px;
      position: absolute;
      right: 17px;
      top: calc(50% - 6px);
    }
  }
}
.number-minus,
.number-plus {
  font-size: rem(30);
  height: rem(42);
  border: none;
  width: rem(36);
  cursor: pointer;
  // border-radius: 50%;
  position: absolute;
  top: rem(10);
  background-color: $main-color - 50%;
  color: white;
  transition: all 0.5s;

  &:active {
    background-color: $main-color - 100%;
  }
}

@media (hover: hover) and (pointer: fine) {
  .number-minus:hover,
  .number-plus:hover {
    background-color: $main-color - 100%;
  }
}

.subtext {
  font-size: 0.8em;
  color: $main-color + 80%;
  text-align: center;
}

@keyframes start {
  from {
    opacity: 0.5;
    transform: scale(0.9);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}
